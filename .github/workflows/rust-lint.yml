name: "Rust lint workflow"

on:
  workflow_call:
    inputs:
      build-dependencies:
        type: string
        required: false

jobs:

  audit:
    name: audit
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
      - name: install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit
      - name: audit
        run: |
          cargo audit --color always --deny warnings

  check:
    name: check
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: install build-dependencies
        if: inputs.build-dependencies != ''
        run: |
          sudo apt install ${{ inputs.build-dependencies }}
      - name: cargo check
        run: |
          cargo check --all-features --all-targets

  fmt:
    name: fmt
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: rustfmt
        run: |
          cargo fmt --check

  clippy:
    name: clippy
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - name: install build-dependencies
        if: inputs.build-dependencies != ''
        run: |
          sudo apt install ${{ inputs.build-dependencies }}
      - name: clippy
        run: |
          cargo clippy --all-features --all-targets -- -D warnings

  fuzz-check:
    name: fuzz-check
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: install cargo-fuzz
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-fuzz
      - name: install build-dependencies
        if: inputs.build-dependencies != ''
        run: |
          sudo apt install ${{ inputs.build-dependencies }}
      - name: check fuzz targets
        run: |
          cargo fuzz check
        if: hashFiles('./fuzz/Cargo.toml')

  docs:
    name: docs
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
      - name: install build-dependencies
        if: inputs.build-dependencies != ''
        run: |
          sudo apt install ${{ inputs.build-dependencies }}
      - name: generate docs
        run: |
          cargo doc --all-features --no-deps
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"
