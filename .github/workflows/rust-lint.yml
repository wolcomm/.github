name: "Rust lint workflow"

on:
  workflow_call: {}

jobs:

  audit:
    name: audit
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  check:
    name: check
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --all-targets

  fmt:
    name: fmt
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  clippy:
    name: clippy
    needs: [audit]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - name: clippy
        uses: actions-rs/clippy-check@v1
        with:
          name: ${{ matrix.rust }}
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

  fuzz-check:
    name: fuzz-check
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: install cargo-fuzz
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-fuzz
      - name: check fuzz targets
        uses: actions-rs/cargo@v1
        if: hashFiles('./fuzz/Cargo.toml')
        with:
          command: fuzz
          args: check

  docs:
    name: docs
    needs: [audit]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: generate docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"
